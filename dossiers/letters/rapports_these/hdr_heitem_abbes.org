
#+TITLE: Contributions à la Gestion Décentralisée des Ressources dans les Environnements de Grilles et Cloud
#+AUTHOR: Heitem Abbes


Le  document  décrit  les  travaux  de recherche  réalisées  au  laboratoire  de
recherche  LaTICE  en  collaboration  avec  LIPN depuis  sa  thèse  de  doctorat
en 2009. Ces activités ont pour objectif d’améliorer la conception et la mise en
oeuvre des intergiciels de gestion de ressources de calcul et de données.

Le document  est organisé en cinq  chapitres. Le premier chapitre est une
introduction qui donne le contexte scientifique dans lequel se situe se travail
et résume les principales contributions.


* Ch2
Le  chapitre 2  brosse l'évolution  dans les  dernières décennies,  des systèmes
distribués de calcul, sous le prisme  des concepts et problématiques relatifs au
travail  de recherche  présenté.  

* Ch 3
Le chapitre 3  décrit une première série de contributions  concernant la gestion
des  données dans  des environnements  décentralisés.  Il  introduit d'abord  la
problématique  de la  gestion  des données  volumineuses  pour des  applications
scientifiques de  type workflow.  Le chapitre  décrit avec du recul,  le premier
travail de l'auteur dans ce domaine, l'intergiciel /BonjourGrid/ (2008). Il fait
le constat  que la gestion  des données  de BonjourGrid pouvait  être améliorée.
Cette  fonctionnalité  initialement  traitée   comme  une  tâche  auxiliaire  du
coordinateur,   fait  l'objet   d'une  refonte   pour  devenir   une  composante
/gestionnaire  de  données/  à  part   entière  de  l'intergiciel.   De  manière
pertinente, l'auteur a choisi de s'appuyer  sur des projets existants (BitDew et
Stork) pour réaliser  cette composante. Disposer d'un gestionnaire  de données a
permis de  concevoir des solutions  de cache  et de pré-chargement  des données,
indépendantes de l'intergiciel (l'auteur l'a intégré dans BonjourGrid mais aussi
dans Condor). Le calcul du pré-chargement de données, étant donné un workflow de
tâches (exprimant les  dépendances) est un problème tout à  fait général, que le
document aurait pu mettre davantage en  exergue. Ces travaux sur le gestionnaire
de  données  ont  fait  l'objet d'évaluations  expérimentales  conséquentes  (de
l'ordre  de 200  machines) sur  une  plate-forme réelle,  Grid'5000.  C'est  une
démarche qu'il  faut saluer  car elle  demande beaucoup de  temps mais  est elle
nécessaire pour avoir une validation crédible de la proposition.

Toujours en matière de gestion décentralisée des données, ce chapitre expose des
travaux sur la  sécurisation des données dans le cadre  d'un framework MapReduce
par un  mécanisme de  dissémination des  données. La  motivation aurait  pu être
donnée au début de l'exposé (et non  au sein du descriptif du fonctionnement, en
section 3.6.2.6) car cette problématique est  d'importance quand on fait appel à
des ressources de  calcul et stockage externes. En effet,  il est ainsi possible
de  ne confier  aux  entités externes  de stockage  qu'une  partie des  données,
rendant impossible leur compréhension sans les parties complémentaires hébergées
sur des entités de confiance. Cette problématique est complètement en phase avec
l'utilisation grandissante  des clouds publics.  Pour ce travail  également, des
expérimentations conséquentes sur Grid'5000 ont permis  de mesurer le coût de la
surcouche de dissémination.


* Ch 4 Modèles décentralisés de gestion des points de reprises de conteneurs

Le  chapitre 4 traite  de la  tolérance aux  pannes en environnement décentralisé



* Verbatim

Chap 2. Évolution des systèmes distribués

Nous  nous sommes  focalisés  sur  la gestion  décentralisée  des ressources  de
grilles dans  nos activités  de recherche.   En effet,  les systèmes  de grilles
décentralisés doivent  utiliser un ordonnancement  distribué sans passer  par un
élément  central  qui  tient  l’information  sur l’état  des  ressources  de  la
grille. L’ordonnanceur  distribué doit tenir  compte aussi de la  volatilité des
ressources,  la disponibilité  aléatoire,  la crédibilité,  la  confiance et  la
qualité de service demandée par l’utilisateur.

Chap 3. 
Modèles décentralisés de gestion des données dans les Grilles et Clouds

la gestion de données nécessite une attention particulière pour bénéficier des avantages de telles plateformes. Nous proposons un mo- dèle décentralisé pour la gestion de données. Nous nous intéressons aussi à la sécurisation des données dans les environnements du cloud pour les applications map/reduce.

Dans [CF12], Fedak et al. soulignent que la gestion des données dans l’environnement des grilles de PCs, est difficile à accomplir à cause de de la volatilité des noeuds. En plus, l’éloignement géographique des ressources rend la conception d’une solution scalable, permettant de gérer de grandes masses de données très compliquée.
Notre objectif est de concevoir un modèle auto-configurable capable d’orchestrer de manière décentralisée les données et le calcul.


concl chap 3.4

Cette conclusion montre la scalabilité de BonjourGrid suite à l’intégration d’un mécanisme de gestion des données.




Chap 4.
Modèles décentralisés de gestion des points de reprises de conteneurs


Le chapitre  est organisé comme  suit, nous présentons  dans la section  4.2, la
conception architecturale  de notre modèle LXCloud-CR,  le modèle décentralisé
de sauvegarde  de points de reprises,  ainsi que la validation  expérimentale du
modèle en  utilisant 150 conteneurs distribués  sur 50 nœuds de  Grid’5000. Nous
présentons différents scénarios  de test afin d’étudier  le nouveau comportement
de LXCloud-CR  face aux  pannes. La  section 4.3 présente  le modèle  du garbage
collector décentralisé des checkpoints, nous illustrons l’architecture ainsi que
les expérimentations de validation sur l’environnement Grid5000.


L’originalité de notre modèle de sauvegarde de points de reprises revient à son ar- chitecture totalement décentralisée. Nous appelons dans la suite notre modèle par : LXCloud-CR. Nous utilisons un système de stockage distribué avec une table de hachage distribuée, pour stocker les points de reprise des conteneurs.



5 Conclusion et Perspectives
5.1 Conclusion................................... 69
5.2 Perspectives.................................. 71

5.3 Courtterme.................................. 71
5.3.1 Gestion dynamique de la fréquence des points de reprise et le nombre de réplicas .......................... 71
5.3.2 Modèle de gestion de points de reprises pour les applications pa- rallèlesfortementcouplées ...................... 72
5.3.3 Modèle décentralisé de déduplication des conteneurs . . . . . . . . 72

5.4 Moyen et long termes............................. 73
5.4.1 Cloudvolontaireàbasedenavigateurs . . . . . . . . . . . . . . . 73

L’idée d’avoir un cloud volontaire décentralisé, basé sur la participation de navigateurs Web, soulève plusieurs questions : pouvons nous réutiliser les intergiciels, comme Boinc ou Condor, ou faut-il coder de nou- veaux intergiciels s’exécutant sur les navigateurs à base de JavaScript ?


5.4.2 Modèle de préchargemenent/déchargement pour les plateformes mobiles ................................ 74

L’objectif est de décharger les tâches de calcul et les données à partir des appa- reils mobiles vers les nœuds du Cloud
-> Litterture

5.4.3 Découverte des ressources dans les environnements IoT . . . . . . 74
5.4.4 Cloud of Things(CoT)........................ 75
5.4.5 Infrastructures orientées données .................. 76
5.4.6 Calcul orienté services ........................ 78
5.4.7 Efficacitéénergétique......................... 79
5.4.8 Intégrationdeblockchainaveclecloud . . . . . . . . . . . . . . . 80
