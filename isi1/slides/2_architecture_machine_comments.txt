

Illustration: amorçage PC (x86).

1. BIOS

L'ordinateur cherche dans la ROM le programme BIOS et l'execute. 
Sur d'autres systèmes, on a un équivalent du BIOS, comme 
Extensible Firmware Interface (EFI) Shell sur Itanium.
Le BIOS initialise les peripherique puis charge le premier secteur
du device de boot appelé MBR (selon config, par ex. cdrom, master IDE, clé USB, etc).
Le MBR est de 512 octets et contient le code machine pour booter, appelé boot loader, et
la table des partitions. Une fois chargé, le boot loader prend le contrôle.

2. Boot Loader

LILO et Grub sont les deux boot loaders les plus connus.
Ils sont composés de deux parties.
La première partie est le code du MBR, dont la tâche est de trouver la deuxème partie du boot loader et de le charger en mémoire.
LILO utilise le MBR pour stocker les options (lilo.conf) car il ne sait lire aucun système de fichier.
(C'est pour cela que le /sbin/lilo doit être re-exécuter à chaque changement de lilo.conf).
GRUB au contraire, sait lire du ext2 ou ext3 et consulte dynamiquement les optiions de configuration 
(grub.conf) lors du boot.
La deuxième partie propose un menu permettant de choisir le noyau à charger et les options (l'écran en forme de menu).
Le boot loader charge alors un disque virtuel en mémoire (initrd), lui permettant d'installer des drivers, puis
le binaire correspondant au noyau choisi (/boot/vmlinuz-<kernel-version>).

3. Noyau

Quand le noyau se charge, il initialise la mémoire et le matériel, cherche initrd en mémoire à une adresse prédéfinie,
le monte et charge les drivers. Le noyau initialise ensuite les devices virtuels liés au système de fichier (e.g LVM, RAID logiciel) et peut ensuite démonte initrd et libérer l'espace mémoire alloué.
Le noyau créé ensuite root device et y monte la partition racine en lecture seule.
A ce stade le système est opérationnel mais ne fait rien. Un programme initial est donc lancé automatiquement par l'exécution de /sbin/init.

4. Init 

Le processus init (l'ancêtre de tous les futurs processus) coordonne la fin du démarrage.
Il lance les scripts (dans /etc/init.d/ sur debian-like ou /etc/rc.d/ redhat-like distribs).
Le script d'init (e.g /etc/rc.d/rc.sysinit) renseigne les variables d'environnement, monte le swap, vérifie la cohérence 
du système de fichiers. Ensuite, selon la valeur dans /etc/inittab, on exécute les scripts correspondants aux services
qui doivent être démarrés.
