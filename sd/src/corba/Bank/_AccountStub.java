package Bank;


/**
* Bank/_AccountStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Bank.idl
* mardi 23 octobre 2012 19 h 25 CEST
*/

public class _AccountStub extends org.omg.CORBA.portable.ObjectImpl implements Bank.Account
{

  public int createAccount ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("createAccount", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return createAccount (        );
            } finally {
                _releaseReply ($in);
            }
  } // createAccount

  public void deleteAccount (int accountnum) throws Bank.AccountPackage.UnknownAccount
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("deleteAccount", true);
                $out.write_long (accountnum);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Bank/Account/UnknownAccount:1.0"))
                    throw Bank.AccountPackage.UnknownAccountHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                deleteAccount (accountnum        );
            } finally {
                _releaseReply ($in);
            }
  } // deleteAccount

  public float makeWithdrawal (int accountnum, float amount) throws Bank.AccountPackage.NotEnoughMoney, Bank.AccountPackage.UnknownAccount
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("makeWithdrawal", true);
                $out.write_long (accountnum);
                $out.write_float (amount);
                $in = _invoke ($out);
                float $result = $in.read_float ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Bank/Account/NotEnoughMoney:1.0"))
                    throw Bank.AccountPackage.NotEnoughMoneyHelper.read ($in);
                else if (_id.equals ("IDL:Bank/Account/UnknownAccount:1.0"))
                    throw Bank.AccountPackage.UnknownAccountHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return makeWithdrawal (accountnum, amount        );
            } finally {
                _releaseReply ($in);
            }
  } // makeWithdrawal

  public float makeDeposit (int accountnum, float amount) throws Bank.AccountPackage.UnknownAccount
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("makeDeposit", true);
                $out.write_long (accountnum);
                $out.write_float (amount);
                $in = _invoke ($out);
                float $result = $in.read_float ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Bank/Account/UnknownAccount:1.0"))
                    throw Bank.AccountPackage.UnknownAccountHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return makeDeposit (accountnum, amount        );
            } finally {
                _releaseReply ($in);
            }
  } // makeDeposit

  public float getBalance (int accountnum) throws Bank.AccountPackage.UnknownAccount
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getBalance", true);
                $out.write_long (accountnum);
                $in = _invoke ($out);
                float $result = $in.read_float ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:Bank/Account/UnknownAccount:1.0"))
                    throw Bank.AccountPackage.UnknownAccountHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getBalance (accountnum        );
            } finally {
                _releaseReply ($in);
            }
  } // getBalance

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:Bank/Account:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _AccountStub
