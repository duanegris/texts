install.packages("psych")
library(psych)
search
search()
ratings<Â§read.table("stats1_ex01.txt",header=T)
ratings<-read.table("stats1_ex01.txt",header=T)
class(ratings)
names(ratings)
hist(RedTruck)
hist("RedTruck")
hist
hist()
hist(WoopWoop)
hist(rating$WoopWoop)
hist(rating$RedTruck)
names(ratings)
hist(1)
hist(ratings$RedTruck)
layout(matrix(c(1,2,3,4), 2, 2, byrow = TRUE))#
   hist(ratings$RedTruck, xlab = "Ratings", ylab="Number", main="RedTruck")#
   hist(ratings$HobNob, xlab = "Ratings", ylab="Number", main="HobNob")#
   hist(ratings$FourPlay, xlab = "Ratings", ylab="Number", main="FourPlay")#
   hist(ratings$WoopWoop, xlab = "Ratings", ylab="Number", main="WoopWoop")
summary(ratings)
describe(ratings)
source("/Users/genaud/Documents/svn/repo-steph/science/R/wine_testing.r")
daa <- read.table("DAA.01.txt",header- T)
daa <- read.table("DAA.01.txt",header=T)
class(daa)
names(daa)
help(hist)
des <- daa [ daa$cond = "des" ]#
aer <- daa [ daa$cond = "aer" ]
des <- daa [ daa$cond == "des" ]#
aer <- daa [ daa$cond = "aer" ]
describe(daa)
summar(daa)
summary(daa)
class(daa$cond)
des <- daa [ daa$cond == "des" ]
des <- daa [ cond == "des" ]
xdata$cond == "aer"
daa$cond == "aer"
daa_aer <- daa$cond == "aer"
daa!aer
daa_aer
daa_aer <- daa[daa$cond == "aer",]
daa_aer
daa_aer <- daa[daa$cond == "aer"]
daa_aer <- daa[daa$cond == "aer",]
hist(daa_aer)
hist(daa_aer$)
hist(daa_aer$pre.wm.s)
source(daa.r)
source('daa.r')
describe()
describe(daa_aer$pre.wm.s)
describe(daa_aer)
describe(daa_des)
library(plyr)
install.packages("plyr")
install.packages("ggplot2")
install.packages("~/Downloads/pylr_1.7.1.tar.gz")
install.packages("~/Downloads/pylr_1.7.1.tar.gz",repos=NULL)
install.packages("~/Downloads/pylr_1.7.1.tgz",repos=NULL)
install.packages("~/Downloads/plyr_1.7.1.tgz",repos=NULL)
""
install.packages("~/Downloads/plyr_1.7.1.tgz",repos=NULL)
library(plyr)
install.packages("~/Downloads/ggplot2_0.9.2.1.tgz ",repos=NULL)
install.packages("~/Downloads/ggplot2_0.9.2.1.tgz",repos=NULL)
library(ggplot2)
library("ggplot2")
install.packages("digest")
install.packages("memoise")
install.packages("~/Downloads/digest_0.5.2.tgz",repos=NULL)
library(digest)
library("ggplot2")
install.packages("gtable")
search.packages()
search()
getOption("defaultPackages")
install.packages("gtable")
library("ggplot2")
install.packages("gtable", dependencies = TRUE)
install.packages("~/Downloads/ggplot2_0.9.2.1.tgz",dependencies=TRUE,repos=NULL)
read_tau_trace <- function(file) { df <- read.csv(file, header = FALSE, strip.white = TRUE) names(df) <- c("Nature", "ResourceId", "Type", "Start", "End", "Duration","Value") df = df[!(names(df) %in% c("Nature", "Type"))] df$Origin = file df} df_tau <- read_tau_trace("tau_16_eth_init.csv") head(df_tau)
read_tau_trace <- function(file) {
df <- read.csv(file, header = FALSE, strip.white = TRUE)
names(df) <- c("Nature", "ResourceId", "Type", "Start", "End", "Duration",
"Value")
df = df[!(names(df) %in% c("Nature", "Type"))
df$Origin = file
df = df[!(names(df) %in% c("Nature", "Type"))]
q
q()
library(plyr)#
library(ggplot2)
library(plyr)
library(ggplot2, dependencies = T)
library(ggplot2, dependencies = TRUE)
install.packages(ggplot2, dependencies = TRUE)
install.packages("ggplot2", dependencies = TRUE)
install.packages("~/Downloads/ggplot2_0.9.2.1.tgz", dependencies = TRUE)
install.packages("~/Downloads/ggplot2_0.9.2.1.tgz", dependencies = TRUE, repos=TRUE)
install.packages("~/Downloads/ggplot2_0.9.2.1.tgz", dependencies = TRUE, repos=NULL)
library(ggplot2)
read_tau_trace <- function(file) {#
  df <- read.csv(file, header=FALSE, strip.white=TRUE)#
  names(df) <- c("Nature","ResourceId","Type","Start","End","Duration", "Value")#
  df = df[!(names(df) %in% c("Nature","Type"))]#
  df$Origin=file#
  df#
}#
df_tau <- read_tau_trace('tau_16_eth_init.csv')#
head(df_tau)
read_tau_trace <- function(file) {#
  df <- read.csv(file, header=FALSE, strip.white=TRUE)#
  names(df) <- c("Nature","ResourceId","Type","Start","End","Duration", "Value")#
  df = df[!(names(df) %in% c("Nature","Type"))]#
  df$Origin=file#
  df#
}#
df_tau <- read_tau_trace('~/Documents/svn/infra-songs/WP4/R/Sweep3D_analysis/tau_16_eth_init.csv')#
head(df_tau)
q()
t <- read.table("t.dat",header = T)
names(t)
plot(X,Y)
plot(t$X,t$Y)
plot(t$X)
corr(t$X,t$Y)
cor(t$X,t$Y)
plot(t$X ~t$Y)
plot(t$X ~ t$Y)
abline(lm( t$X, t$Y ), col  ="blue")
abline(lm( t$X, t$Y ),col ="blue")
plot(t$Y ~ t$X, ylab="Y", xlab="X")
abline(lm( t$X, t$Y ),col ="blue")
abline(lm( t$X ~ t$Y ),col ="blue")
abline(lm( t$X ~ t$Y ),col="blue")
abline(lm( t$X ~ t$Y ))
cor( t$X , t$Y )
t
cor.test( t$X , t$Y )
cor( t$X ~ t$Y )
t <- read.table("t.dat",header = T)
t
cor( t$X,t$Y )
average(t$X)
help(average)
help(avg)
help(mean)
mean(t$X)
t <- read.table("t.dat",header = T)
cor( t$X,t$Y )
t <- read.table("t.dat",header = T)
cor( t$X,t$Y )
plt( t$X, t$Y)
plot( t$X, t$Y)
q()
daa <- read.table("DAA.02.txt",header=T)
daa
library(psych)
describe(daa)
daa_des <- daa [ daa$cond == "des", ]
daa_aer <- daa [ daa$cond == "aer", ]
describe(daa!des)
describe(daa_des)
describe(daa_aer)
corr(daa_aes)
cor(daa_aes)
cor(daa_des)
names(daa_des)
daa_des$cond
names(daa_des[3:])
names(daa_des[3:-])
names(daa_des[3,])
names(daa_des[0,])
names(daa_des[3,_])
names(daa_des[3,-])
names(daa_des[3])
names(daa_des[3,4])
names(daa_des[3:4])
names(daa_des[3:])
names(daa_des[3:9])
cor(daa_des[3:9])
names(daa_des[3:-1])
names(daa_des[3:10])
cor(daa_des[3:10])
cor(daa_aer[3:10])
max(daa_aer[3:10])
min(daa_aer[3:10])
maxval(daa_aer[3:10])
library(gclus)#
aer.r = abs(cor())#
aer.color = dmat.color(aer.r)#
aer.o <- order.single(aer.r)#
# cpairs (gclus)#
# draws an enhanced scatterplot matrix#
# cpairs(data, order = NULL, panel.colors = NULL, border.color = "grey70", show.points = TRUE, ...)#
cpairs(aer,#
       aer.o,#
       panel.colors=aer.color,#
       gap=.5,#
       main="Variables Ordered and Colored by Correlation")
source(DAA.02.r)
source("DAA.02.r")
pairs(aer,#
+        aer.o,#
+        panel.colors=aer.color,#
+        gap=.5,#
+        main="Variables Ordered and Colored by Correlation")
pairs(aer,#
        aer.o,#
        panel.colors=aer.color,#
        gap=.5,#
        main="Variables Ordered and Colored by Correlation")
aer
aer.o
q()
read the data into a dataframe#
endur <- read.table("stats1_ex04.txt", header = TRUE)#
plot(endur$endurance ~ endur$age, main="Scatterplot",ylab="Endurance", xlab="Age)
q()
sd
q()
endur <- read.table("stats1_ex04.txt", header = TRUE)
names(endur)
plot(endur$endurance ~ endur$age, main="Scatterplot",ylab="Endurance", xlab="Age)
plot(endur$endurance ~ endur$age, main="Scatterplot",ylab="Endurance", xlab="Age")
abline(lm(endur$endurance ~ endur$age),col="blue")
plot(endur$endurance ~ endur$activeyears, main="Scatterplot",ylab="Endurance", xlab="Active Years")#
abline(lm(endur$endurance ~ endur$activeyears),col="red")
mode11=lm(endur$endurance ~ endur$age)
summary(mode11)
model3 = lm ( endur$endurance ~ endur$age+ endur$activeyears )
summary(model3)
m(formula = scale(endur$endurance) ~ scale(endur$age) + scale(endur$activeyears))
lm(formula = scale(endur$endurance) ~ scale(endur$age) + scale(endur$activeyears))
describe(endur$age)
library(psych)
describe(endur$age)
describe(endur$activeyears)
describe(scale(endur$age))
model3.z = lm(formula = scale(endur$endurance) ~ scale(endur$age) + scale(endur$activeyears))#
summary(model3.z)
q()
source("DAA.03.r")
corr(endur$age, endur$endurance)
cor(endur$age, endur$endurance)
lm(endur$age ~ endur$endurance)
lm(endur$endurance ~ endur$age)
lm(scale(endur$endurance) ~ scale(endur$age))
cor(endur$endurance, endur$age)
lm(endur$endurance ~ endur$age + endur$activeyears)
lm(scale(endur$endurance) ~ scale(endur$age) + scale(endur$activeyears))
corr(endur$activeyares, endur$endurance)
cor(endur$activeyares, endur$endurance)
cor(endur$activeyears, endur$endurance)
lm(endur$endurance ~ endur$activeyears)
lm(scale(endur$endurance) ~ (endur$activeyears))
endu
endur
use endur
use(endur)
cor(endur$age,endur$enduance)
cor(endur$age,endur$endurance)
lm(endur$endurance ~ endur$age)
lm(scale(endur$endurance) ~ scale(endur$age))
lm(scale(endur$endurance) ~ scale(endur$age))
lm(scale(endur$endurance) ~ scale(endur$age))
summary(lm(scale(endur$endurance) ~ scale(endur$age)))
cor( endur$endurance ~ endur$age)
cor( endur$endurance , endur$age)
summary(lm(scale(endur$endurance) ~ scale(endur$activeyears)))
summary(lm(scale(endur$endurance) ~ scale(endur$age)
)
))
summary(lm(scale(endur$endurance) ~ scale(endur$age))
)
summary(lm(scale(endur$endurance) ~ scale(endur$activeyears))
)
summary(lm(scale(endur$endurance) ~ scale(endur$activeyears))
)
